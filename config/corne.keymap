/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&kp MINUS>;
            key-positions = <8 7>;
        };

        b {
            bindings = <&kp UNDERSCORE>;
            key-positions = <8 9>;
        };

        c {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <31 32>;
        };

        d {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <32 33>;
        };

        e {
            bindings = <&kp GRAVE>;
            key-positions = <30 31>;
        };

        f {
            bindings = <&kp COLON>;
            key-positions = <7 18>;
        };

        g {
            bindings = <&kp DOLLAR>;
            key-positions = <2 3>;
        };

        h {
            bindings = <&kp EQUAL>;
            key-positions = <3 4>;
        };

        i {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        j {
            bindings = <&kp LC(S)>;
            key-positions = <4 17>;
        };

        k {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
        };

        l {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
        };

        m {
            bindings = <&kp TILDE>;
            key-positions = <28 29>;
        };

        n {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 5>;
        };

        o {
            bindings = <&kp PIPE>;
            key-positions = <6 18>;
        };

        p {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "0";
            bindings = <
&none  &kp Q           &kp W           &kp E         &kp R             &kp T          &kp Y      &kp U             &kp I        &kp O           &kp P                   &none
&none  &hm LEFT_WIN A  &hm LEFT_ALT S  &hm LCTRL D   &hm LEFT_SHIFT F  &kp G          &kp H      &hm LEFT_SHIFT J  &hm LCTRL K  &hm LEFT_ALT L  &hm LEFT_WIN SEMICOLON  &none
&none  &kp Z           &kp X           &kp C         &kp V             &kp B          &kp N      &kp M             &kp COMMA    &kp DOT         &kp FSLH                &none
                                       &lt 6 DELETE  &lt 4 BACKSPACE   &lt 5 ENTER    &lt 2 TAB  &lt 1 SPACE       &lt 3 ESC
            >;
        };

        nav_layer {
            label = "1";
            bindings = <
&none  &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp INSERT       &none  &none           &none      &none         &none         &none
&none  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp CAPSLOCK     &none  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &none
&none  &kp LC(Z)      &kp LC(X)       &kp LC(C)       &kp LC(V)        &kp LC(LS(Z))    &none  &none           &none      &none         &none         &none
                                      &kp DELETE      &kp BACKSPACE    &kp ENTER        &none  &trans          &none
            >;
        };

        mouse_layer {
            label = "2";
            bindings = <
&none  &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &mkp MB5         &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT_ARROW))  &none      &none         &none         &none
&none  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB4         &kp LG(TAB)             &kp LEFT_SHIFT           &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &none
&none  &kp LC(Z)       &kp LC(X)       &kp LC(C)       &kp LC(V)        &kp LC(LS(Z))    &none                   &none                    &none      &none         &none         &none
                                       &mkp MCLK       &mkp LCLK        &mkp RCLK        &trans                  &none                    &none
            >;
        };

        media_layer {
            label = "3";
            bindings = <
&none  &to 7         &none         &kp C_VOLUME_UP    &none         &bt BT_CLR           &none  &none           &none             &none         &bootloader   &none
&none  &none         &kp C_PREV    &kp C_VOLUME_DOWN  &kp C_NEXT    &ext_power EP_TOG    &none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_WIN  &none
&none  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1       &bt BT_SEL 0  &out OUT_TOG         &none  &none           &none             &none         &none         &none
                                   &kp C_MUTE         &kp C_PP      &kp C_STOP           &none  &none           &trans
            >;
        };

        number_layer {
            bindings = <
&none  &none         &none         &none      &none           &none    &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET  &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp EQUAL         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SEMICOLON      &none
&none  &none         &none         &none      &none           &none    &kp BACKSLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp GRAVE          &none
                                   &none      &trans          &none    &kp MINUS         &kp N0        &kp PERIOD
            >;

            label = "4";
        };

        symbol_layer {
            bindings = <
&none  &none         &none         &mkp MCLK  &mkp RCLK       &mkp LCLK    &kp LEFT_BRACE  &kp AMPERSAND         &kp ASTERISK           &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE  &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &mkp MB4     &kp PLUS        &kp DOLLAR            &kp PERCENT            &kp CARET             &kp COLON        &none
&none  &none         &none         &none      &none           &mkp MB5     &kp PIPE        &kp EXCLAMATION       &kp AT_SIGN            &kp HASH              &kp TILDE        &none
                                   &none      &none           &trans       &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;

            label = "5";
        };

        fun_layer {
            bindings = <
&none  &none         &none         &none      &none           &none    &kp PRINTSCREEN  &kp F7     &kp F8      &kp F9  &kp F12  &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp SCROLLLOCK   &kp F4     &kp F5      &kp F6  &kp F11  &none
&none  &none         &none         &none      &none           &none    &kp PAUSE_BREAK  &kp F1     &kp F2      &kp F3  &kp F10  &none
                                   &trans     &none           &none    &kp TAB          &kp SPACE  &kp C_MENU
            >;
        };

        game {
            bindings = <
&none  &kp LALT   &kp Q  &kp W    &kp E    &kp R        &kp Y           &kp U           &kp I         &kp O            &kp P      &none
&none  &kp LCTRL  &kp A  &kp S    &kp D    &kp F        &kp H           &kp J           &kp K         &kp L            &kp M      &none
&none  &kp LSHFT  &kp Z  &kp X    &kp C    &kp V        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp RSHFT  &none
                         &kp ESC  &kp TAB  &kp SPACE    &kp ENTER       &kp BSPC        &to 0
            >;
        };
    };
};
